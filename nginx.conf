# Run Nginx under the 'nginx' user for security.
user nginx;

# Automatically set the number of worker processes based on available CPU cores.
worker_processes auto;

# Log errors with a warning severity level.
error_log /var/log/nginx/error.log warn;

# Store the Nginx master process PID.
pid /var/run/nginx.pid;

events {
    # Maximum number of simultaneous connections per worker.
    worker_connections 1024;
}

http {
    # Define a log format for access logging.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Specify the access log file and format.
    access_log /var/log/nginx/access.log main;

    # Define an upstream block for the backend service.
    upstream backend {
        # Replace 'app' with the hostname of your backend service (e.g., Docker Compose service name) and port.
        server app:8080;
    }

    server {
        # Listen for incoming HTTP requests on port 80.
        listen 80;
        
        # Use a wildcard server name to catch all requests.
        server_name _;

        # All requests are forwarded to the backend upstream.
        location / {
            # Pass the request to the backend defined above.
            proxy_pass http://backend;
            
            # Set HTTP version and connection upgrades (useful for websockets or HTTP/1.1).
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Forward the original Host header.
            proxy_set_header Host $host;
            
            # Pass the real client IP.
            proxy_set_header X-Real-IP $remote_addr;
            
            # Preserve the list of forwarded addresses.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Forward the original scheme (http or https).
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optional timeout settings (adjust as needed).
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }
    }
}